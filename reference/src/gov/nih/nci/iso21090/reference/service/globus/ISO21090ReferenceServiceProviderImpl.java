//============================================================================
// Copyright 5AM Solutions, Inc
// Copyright Ekagra Software Technologies Ltd.
// Copyright Guidewire Architecture
// Copyright The Ohio State University Research Foundation
// Copyright Science Applications International Corporation
//
// Distributed under the OSI-approved BSD 3-Clause License.
// See http://ncip.github.com/iso21090/LICENSE.txt for details.
//============================================================================

package gov.nih.nci.iso21090.reference.service.globus;

import gov.nih.nci.iso21090.reference.service.ISO21090ReferenceServiceImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the ISO21090ReferenceServiceImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.3
 * 
 */
public class ISO21090ReferenceServiceProviderImpl{
	
	ISO21090ReferenceServiceImpl impl;
	
	public ISO21090ReferenceServiceProviderImpl() throws RemoteException {
		impl = new ISO21090ReferenceServiceImpl();
	}
	

    public gov.nih.nci.iso21090.reference.stubs.GetPersonByIdResponse getPersonById(gov.nih.nci.iso21090.reference.stubs.GetPersonByIdRequest params) throws RemoteException {
    gov.nih.nci.iso21090.reference.stubs.GetPersonByIdResponse boxedResult = new gov.nih.nci.iso21090.reference.stubs.GetPersonByIdResponse();
    boxedResult.setPerson(impl.getPersonById(params.getId().getId()));
    return boxedResult;
  }

    public gov.nih.nci.iso21090.reference.stubs.CreatePersonResponse createPerson(gov.nih.nci.iso21090.reference.stubs.CreatePersonRequest params) throws RemoteException {
    gov.nih.nci.iso21090.reference.stubs.CreatePersonResponse boxedResult = new gov.nih.nci.iso21090.reference.stubs.CreatePersonResponse();
    boxedResult.setId(impl.createPerson(params.getPerson().getPerson()));
    return boxedResult;
  }

    public gov.nih.nci.iso21090.reference.stubs.UpdatePersonResponse updatePerson(gov.nih.nci.iso21090.reference.stubs.UpdatePersonRequest params) throws RemoteException {
    gov.nih.nci.iso21090.reference.stubs.UpdatePersonResponse boxedResult = new gov.nih.nci.iso21090.reference.stubs.UpdatePersonResponse();
    impl.updatePerson(params.getPerson().getPerson());
    return boxedResult;
  }

    public gov.nih.nci.iso21090.reference.stubs.DeletePersonResponse deletePerson(gov.nih.nci.iso21090.reference.stubs.DeletePersonRequest params) throws RemoteException {
    gov.nih.nci.iso21090.reference.stubs.DeletePersonResponse boxedResult = new gov.nih.nci.iso21090.reference.stubs.DeletePersonResponse();
    impl.deletePerson(params.getPerson().getPerson());
    return boxedResult;
  }

}
