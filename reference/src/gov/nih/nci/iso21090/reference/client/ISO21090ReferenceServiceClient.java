package gov.nih.nci.iso21090.reference.client;

import java.io.InputStream;
import java.rmi.RemoteException;

import javax.xml.namespace.QName;

import org.apache.axis.EngineConfiguration;
import org.apache.axis.client.AxisClient;
import org.apache.axis.client.Stub;
import org.apache.axis.configuration.FileProvider;
import org.apache.axis.message.addressing.EndpointReferenceType;
import org.apache.axis.types.URI.MalformedURIException;

import org.oasis.wsrf.properties.GetResourcePropertyResponse;

import org.globus.gsi.GlobusCredential;

import gov.nih.nci.iso21090.Constants;
import gov.nih.nci.iso21090.extensions.Id;
import gov.nih.nci.iso21090.reference.stubs.ISO21090ReferenceServicePortType;
import gov.nih.nci.iso21090.reference.stubs.service.ISO21090ReferenceServiceAddressingLocator;
import gov.nih.nci.iso21090.reference.common.ISO21090ReferenceServiceI;
import gov.nih.nci.cagrid.introduce.security.client.ServiceSecurityClient;

/**
 * This class is autogenerated, DO NOT EDIT GENERATED GRID SERVICE ACCESS METHODS.
 *
 * This client is generated automatically by Introduce to provide a clean unwrapped API to the
 * service.
 *
 * On construction the class instance will contact the remote service and retrieve it's security
 * metadata description which it will use to configure the Stub specifically for each method call.
 * 
 * @created by Introduce Toolkit version 1.3
 */
public class ISO21090ReferenceServiceClient extends ISO21090ReferenceServiceClientBase implements ISO21090ReferenceServiceI {	

	public ISO21090ReferenceServiceClient(String url) throws MalformedURIException, RemoteException {
		this(url,null);	
	}

	public ISO21090ReferenceServiceClient(String url, GlobusCredential proxy) throws MalformedURIException, RemoteException {
	   	super(url,proxy);
	}
	
	public ISO21090ReferenceServiceClient(EndpointReferenceType epr) throws MalformedURIException, RemoteException {
	   	this(epr,null);
	}
	
	public ISO21090ReferenceServiceClient(EndpointReferenceType epr, GlobusCredential proxy) throws MalformedURIException, RemoteException {
	   	super(epr,proxy);
	}

	public static void usage(){
		System.out.println(ISO21090ReferenceServiceClient.class.getName() + " -url <service url>");
	}
	
	public static void main(String [] args){
	    System.out.println("Running the Grid Service Client");
		try{
		if(!(args.length < 2)){
			if(args[0].equals("-url")){
			  ISO21090ReferenceServiceClient client = new ISO21090ReferenceServiceClient(args[1]);
			  // place client calls here if you want to use this main as a
			  // test....
			  System.out.println("Retrieving person.");
			  //ClientUtils.handleResult(client.getPersonById(createII()));
			} else {
				usage();
				System.exit(1);
			}
		} else {
			usage();
			System.exit(1);
		}
		} catch (Exception e) {
			e.printStackTrace();
			System.exit(1);
		}
	}
	
	private static Id createII() {
	    Id id = new Id();
	    id.setRoot(Constants.NCI_OID);
	    id.setIdentifierName("Person");
	    id.setExtension("1");
	    return id;
	}

  public gov.nih.nci.iso21090.extensions.Id createPerson(gov.nih.nci.iso21090.reference.Person person) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"createPerson");
    gov.nih.nci.iso21090.reference.stubs.CreatePersonRequest params = new gov.nih.nci.iso21090.reference.stubs.CreatePersonRequest();
    gov.nih.nci.iso21090.reference.stubs.CreatePersonRequestPerson personContainer = new gov.nih.nci.iso21090.reference.stubs.CreatePersonRequestPerson();
    personContainer.setPerson(person);
    params.setPerson(personContainer);
    gov.nih.nci.iso21090.reference.stubs.CreatePersonResponse boxedResult = portType.createPerson(params);
    return boxedResult.getId();
    }
  }

  public void updatePerson(gov.nih.nci.iso21090.reference.Person person) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"updatePerson");
    gov.nih.nci.iso21090.reference.stubs.UpdatePersonRequest params = new gov.nih.nci.iso21090.reference.stubs.UpdatePersonRequest();
    gov.nih.nci.iso21090.reference.stubs.UpdatePersonRequestPerson personContainer = new gov.nih.nci.iso21090.reference.stubs.UpdatePersonRequestPerson();
    personContainer.setPerson(person);
    params.setPerson(personContainer);
    gov.nih.nci.iso21090.reference.stubs.UpdatePersonResponse boxedResult = portType.updatePerson(params);
    }
  }

  public void deletePerson(gov.nih.nci.iso21090.reference.Person person) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"deletePerson");
    gov.nih.nci.iso21090.reference.stubs.DeletePersonRequest params = new gov.nih.nci.iso21090.reference.stubs.DeletePersonRequest();
    gov.nih.nci.iso21090.reference.stubs.DeletePersonRequestPerson personContainer = new gov.nih.nci.iso21090.reference.stubs.DeletePersonRequestPerson();
    personContainer.setPerson(person);
    params.setPerson(personContainer);
    gov.nih.nci.iso21090.reference.stubs.DeletePersonResponse boxedResult = portType.deletePerson(params);
    }
  }

  public org.oasis.wsrf.properties.GetMultipleResourcePropertiesResponse getMultipleResourceProperties(org.oasis.wsrf.properties.GetMultipleResourceProperties_Element params) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getMultipleResourceProperties");
    return portType.getMultipleResourceProperties(params);
    }
  }

  public org.oasis.wsrf.properties.GetResourcePropertyResponse getResourceProperty(javax.xml.namespace.QName params) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getResourceProperty");
    return portType.getResourceProperty(params);
    }
  }

  public org.oasis.wsrf.properties.QueryResourcePropertiesResponse queryResourceProperties(org.oasis.wsrf.properties.QueryResourceProperties_Element params) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"queryResourceProperties");
    return portType.queryResourceProperties(params);
    }
  }

  public gov.nih.nci.iso21090.reference.Person getPersonById(gov.nih.nci.iso21090.extensions.Id id) throws RemoteException {
    synchronized(portTypeMutex){
      configureStubSecurity((Stub)portType,"getPersonById");
    gov.nih.nci.iso21090.reference.stubs.GetPersonByIdRequest params = new gov.nih.nci.iso21090.reference.stubs.GetPersonByIdRequest();
    gov.nih.nci.iso21090.reference.stubs.GetPersonByIdRequestId idContainer = new gov.nih.nci.iso21090.reference.stubs.GetPersonByIdRequestId();
    idContainer.setId(id);
    params.setId(idContainer);
    gov.nih.nci.iso21090.reference.stubs.GetPersonByIdResponse boxedResult = portType.getPersonById(params);
    return boxedResult.getPerson();
    }
  }

}
